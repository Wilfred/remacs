name: Remacs CI

on:
  pull_request:
    # paths:
    # - 'lib/**'
    # - 'lib-src/**'
    # - 'src/**'
    # - 'rust_src/**'

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: setup Rust version
      run: rustup toolchain install $(cat rust-toolchain)
    - name: install Clippy
      run: rustup component add clippy
    - name: install dependencies
      run: sudo apt-get update -y && sudo apt-get install -y libgnutls28-dev libgif-dev libxmp-dev libgtk-3-dev libxpm-dev
    - name: autogen
      run: ./autogen.sh
    - name: configure
      run: ./configure --without-makeinfo
    - name: make clean
      run: make clean
    - name: run Cliippy
      run: make clippy

  linux-no-gui-build:
    name: Linux no GUI build
    runs-on: ubuntu-latest
    needs: clippy
    
    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: setup Rust version
      run: rustup toolchain install $(cat rust-toolchain)
    - name: Dependencies
      run: sudo apt-get update -y && sudo apt-get install -y libgnutls28-dev
    - name: autogen
      run: ./autogen.sh
    - name: configure
      run: ./configure --without-makeinfo --with-x=no --without-gconf --without-gsettings
    - name: make
      run: make -j 3
    - name: make check
      run: make check
